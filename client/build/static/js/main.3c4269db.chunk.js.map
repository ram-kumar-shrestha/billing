{"version":3,"sources":["components/nav-left/CompanyInfo.js","components/nav-left/NavigationLink.js","apis/api.js","services/authHeader.js","actions/index.js","components/nav-left/index.js","components/header/index.js","components/main/dashboard/index.js","components/main/products/index.js","components/main/history/index.js","components/main/users/index.js","components/main/create-invoice/InvoiceForm.js","components/main/create-invoice/ProductItemForm.js","components/main/products/AddProduct.js","components/main/products/ViewAllProducts.js","components/main/products/UpdateProduct.js","components/main/users/AddUserForm.js","components/main/users/ViewAllUsers.js","components/main/users/UpdateUser.js","components/main/create-invoice/Item.js","components/main/create-invoice/InvoiceTable.js","components/main/create-invoice/ShowInvoice.js","components/main/history/ShowHistory.js","components/main/index.js","components/login/index.js","components/App.js","reducers/index.js","reducers/productsReducer.js","reducers/usersReducer.js","reducers/selectProductReducer.js","reducers/clientReducer.js","reducers/historyReducer.js","reducers/authReducer.js","index.js"],"names":["CompanyInfo","className","src","process","alt","NavigationLink","path","name","icon","to","style","display","paddingRight","axios","create","baseURL","authHeader","token","localStorage","getItem","Authorization","fetchProducts","dispatch","getState","a","api","get","headers","response","type","payload","data","console","log","fetchUsers","fetchUser","id","fetchHistories","connect","state","authUser","width","border","fontSize","onClick","e","preventDefault","user","_id","logOut","post","status","removeItem","isAuth","navigate","useNavigate","useState","loading","setLoading","justifyContent","handleLogOut","paddingLeft","borderLeftColor","top","left","index","clickHandler","background","fontWeight","histories","history","products","fetchHistory","deleteHistory","delete","props","Object","prototype","toString","call","length","historyList","map","clientName","invoiceNo","date","userName","initialValues","client","isEditClient","phone","organization","invoice","form","addClient","refreshItem","item","reduxForm","useEffect","pristine","reset","submitting","info","message","bgColor","color","marginBottom","padding","setMessage","onSubmit","values","isNaN","Number","htmlFor","Field","component","required","disabled","items","productItems","selectedProducts","selectItem","editClient","deleteItem","selectedItems","product","quantity","options","value","undefined","list","productInfo","addProduct","Error","reponse","error","setError","rate","description","then","catch","deleteProduct","fetchProduct","productsList","ownProps","updateProduct","patch","enableReinitialize","useParams","userInfo","addUser","email","password","users","deleteUser","usersList","updateUser","Item","InvoiceTable","total_sum","find","toLowerCase","parseInt","amount","colSpan","createHistory","Date","componentRef","useRef","invoice_date","toLocaleDateString","invoice_time","toLocaleTimeString","invoice_no","getTime","newHistory","clientPhone","clientOrganization","time","ref","borderColor","useReactToPrint","content","current","onAfterPrint","historyTable","Index","element","AddProduct","UpdateProduct","ShowHistory","UpdateUser","Component","logInInfo","logIn","setItem","handleSubmit","fetchAuthUser","renderApp","combineReducers","formReducer","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c4269db.chunk.js","sourcesContent":["import React from \"react\";\n\nconst company_name = \"Company Name \";\nconst address = \"Address\";\n\nconst CompanyInfo = () => {\n  return (\n    <>\n      <div className=\"logo\">\n        <img\n          src={`${process.env.PUBLIC_URL}/images/logo.svg`}\n          // src=\"./iamges/logo.svg\"\n          alt=\"company logo\"\n        />\n      </div>\n      <div className=\"info\">\n        <h1>{company_name}</h1>\n        <h4>{address}</h4>\n      </div>\n    </>\n  );\n};\n\nexport default CompanyInfo;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavigationLink = ({ path, name, icon = [] }) => {\n  return (\n    <Link\n      className=\"link\"\n      to={path}\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <span style={{ paddingRight: \"0.5rem\" }}>{icon}</span>\n      {name}\n    </Link>\n  );\n};\n\nexport default NavigationLink;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/\",\n});\n","export default function authHeader() {\n  const token = localStorage.getItem(\"authToken\");\n\n  if (token) {\n    return { Authorization: \"Bearer \" + token };\n  } else {\n    return {};\n  }\n}\n","import api from \"../apis/api\";\nimport authHeader from \"../services/authHeader\";\n\n/**\n *\n *  action related to product\n *\n */\n\n// add a product to db\nexport const addProduct = (product) => async (dispatch, getState) => {\n  try {\n    const response = await api.post(\"/products\", product, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"ADD_PRODUCT\", payload: response.data });\n  } catch (error) {\n    throw new Error(error.reponse);\n  }\n};\n\n// load all product from db\nexport const fetchProducts = () => async (dispatch, getState) => {\n  try {\n    const response = await api.get(\"/products\", { headers: authHeader() });\n\n    dispatch({ type: \"FETCH_PRODUCTS\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// load a product from db\nexport const fetchProduct = (id) => async (dispatch, getState) => {\n  try {\n    const response = await api.get(`/products/${id}`, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"FETCH_PRODUCT\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// update a product\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n  try {\n    const response = await api.patch(`/products/${id}`, product, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"UPDATE_PRODUCT\", payload: response.data });\n  } catch (error) {\n    throw new Error(error.reponse);\n  }\n};\n\n// delete a product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    const response = await api.delete(`/products/${id}`, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"DELETE_PRODUCT\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/**\n *\n *  action related to users\n *\n */\n\n// add a user to db\nexport const addUser = (user) => async (dispatch, getState) => {\n  try {\n    const response = await api.post(\"/users\", user, { headers: authHeader() });\n\n    dispatch({ type: \"ADD_USER\", payload: response.data });\n  } catch (error) {\n    throw new Error(error.reponse);\n  }\n};\n\n// load all user from db\nexport const fetchUsers = () => async (dispatch, getState) => {\n  try {\n    const response = await api.get(\"/users\", { headers: authHeader() });\n\n    dispatch({ type: \"FETCH_USERS\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// load a user from db\nexport const fetchUser = (id) => async (dispatch, getState) => {\n  try {\n    const response = await api.get(`/users/${id}`, { headers: authHeader() });\n\n    dispatch({ type: \"FETCH_USER\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// load authenticated user from db\nexport const fetchAuthUser = (id) => async (dispatch, getState) => {\n  try {\n    const response = await api.get(`/users/${id}`, { headers: authHeader() });\n\n    dispatch({\n      type: \"FETCH_AUTH_USER\",\n      payload: { user: response.data, isAuth: true },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// update a user\nexport const updateUser = (id, user) => async (dispatch, getState) => {\n  try {\n    const response = await api.patch(`/users/${id}`, user, {\n      headers: authHeader(),\n    });\n    dispatch({ type: \"UPDATE_USER\", payload: response.data });\n  } catch (error) {\n    throw new Error(error.reponse);\n  }\n};\n\n// delete a user\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    const response = await api.delete(`/users/${id}`, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"DELETE_USER\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// create history\nexport const createHistory = (history) => async (dispatch) => {\n  try {\n    const response = await api.post(\"/history\", history, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"ADD_Histroy\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetch all histories\nexport const fetchHistories = () => async (dispatch) => {\n  try {\n    const response = await api.get(\"/history\", { headers: authHeader() });\n\n    dispatch({\n      type: \"FETCH_HISTORIES\",\n      payload: response.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetch a history\nexport const fetchHistory = (id) => async (dispatch) => {\n  try {\n    const response = await api.get(`/history/${id}`, { headers: authHeader() });\n\n    dispatch({\n      type: \"FETCH_HISTORY\",\n      payload: response.data,\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// delete a history\nexport const deleteHistory = (id) => async (dispatch, getState) => {\n  try {\n    const response = await api.delete(`/history/${id}`, {\n      headers: authHeader(),\n    });\n\n    dispatch({ type: \"DELETE_HISTORY\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// login\nexport const logIn = (user) => async (dispatch) => {\n  try {\n    const response = await api.post(\"/users/login\", user);\n\n    localStorage.setItem(\"authToken\", response.data.token);\n    localStorage.setItem(\"authId\", response.data.user._id);\n\n    dispatch({\n      type: \"LOG_IN\",\n      payload: { ...response.data, isAuth: true },\n    });\n  } catch (error) {\n    throw new Error(error.response);\n  }\n};\n\n// logout\nexport const logOut = () => async (dispatch) => {\n  try {\n    console.log(authHeader());\n    const response = await api.post(\"/users/logout\", null, {\n      headers: authHeader(),\n    });\n    console.log(response);\n    if (response.status === 200) {\n      localStorage.removeItem(\"authToken\");\n      localStorage.removeItem(\"authId\");\n    } //only remove token when user is logged out\n\n    dispatch({\n      type: \"LOG_OUT\",\n      payload: { isAuth: false },\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n/**\n *\n *  action related to client\n *\n */\nexport const addClient = (client) => {\n  return {\n    type: \"ADD_CLIENT\",\n    payload: client,\n  };\n};\n\n// to prevent the loss of selectedItem while editing clientInfo\nexport const editClient = (client) => {\n  return {\n    type: \"EDIT_CLIENT\",\n    payload: { ...client, isEditClient: true },\n  };\n};\n\nexport const selectItem = (item) => {\n  return {\n    type: \"SELECT_ITEM\",\n    payload: item,\n  };\n};\n\nexport const refreshItem = (item) => {\n  return {\n    type: \"REFRESH_ITEM\",\n    payload: item,\n  };\n};\n\nexport const deleteItem = (item) => {\n  return {\n    type: \"DELETE_ITEM\",\n    payload: item,\n  };\n};\n","import React from \"react\";\nimport {\n  FaTachometerAlt,\n  FaFileInvoiceDollar,\n  FaHistory,\n  FaUser,\n  FaUsers,\n  FaSitemap,\n} from \"react-icons/fa\";\n\nimport \"./nav-left.css\";\nimport CompanyInfo from \"./CompanyInfo\";\nimport NavigationLink from \"./NavigationLink\";\nimport { connect } from \"react-redux\";\n\nimport { fetchUser } from \"../../actions\";\n\nconst Index = ({ authUser, fetchUser }) => {\n  return (\n    <aside className=\"nav-left\">\n      <div className=\"nav-left__container\">\n        <section className=\"company-info\">\n          <CompanyInfo />\n        </section>\n\n        <section className=\"top-left-nav\">\n          <nav>\n            <NavigationLink\n              path=\"/dashboard\"\n              icon={<FaTachometerAlt />}\n              name=\"Dashboard\"\n            />\n\n            <NavigationLink\n              path=\"/products/add-a-product\"\n              icon={<FaSitemap />}\n              name=\"Products\"\n            />\n\n            <NavigationLink\n              path=\"/create-an-invoice/invoice-form\"\n              icon={<FaFileInvoiceDollar />}\n              name=\"Create an Invoice\"\n            />\n\n            <NavigationLink\n              path=\"/history/all\"\n              icon={<FaHistory />}\n              name=\"History\"\n            />\n\n            <NavigationLink\n              path=\"/users/add-a-user\"\n              icon={<FaUsers />}\n              name=\"Users\"\n            />\n          </nav>\n        </section>\n\n        <section className=\"nav-left__bottom\">\n          <button\n            style={{\n              width: \"100%\",\n              border: \"none\",\n              fontSize: \"1rem\",\n            }}\n            onClick={(e) => {\n              e.preventDefault();\n              fetchUser(authUser.user._id);\n            }}\n          >\n            <NavigationLink\n              path={`/users/update/${authUser.user._id}`}\n              name=\"Profile\"\n              icon={<FaUser />}\n            />\n          </button>\n        </section>\n      </div>\n    </aside>\n  );\n};\nconst mapStateToProps = (state) => {\n  return { authUser: state.authUser };\n};\nexport default connect(mapStateToProps, { fetchUser })(Index);\n","import React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { AiOutlineLogout } from \"react-icons/ai\";\nimport { connect } from \"react-redux\";\n\nimport \"./header.css\";\nimport { logOut } from \"../../actions\";\n\nconst Index = ({ authUser, logOut }) => {\n  const navigate = useNavigate();\n\n  const [loading, setLoading] = useState(false);\n\n  const handleLogOut = (e) => {\n    e.preventDefault();\n\n    setLoading(true); //start loading animation\n\n    logOut();\n    navigate(\"/\");\n  };\n\n  return (\n    <header>\n      <section className=\"top-header\">\n        <Link className=\"user\" to=\"/profile\">\n          {authUser.user.name}\n        </Link>\n        <button\n          className=\"btn-log__out\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n          onClick={(e) => handleLogOut(e)}\n        >\n          Log out\n          <span style={{ paddingLeft: \"0.5rem\" }}>\n            <AiOutlineLogout />\n          </span>\n          {loading && (\n            <span\n              style={{\n                borderLeftColor: \"rgb(21 154 239)\",\n                top: \"0\",\n                left: \"0.5rem\",\n              }}\n              className=\"spinning-loader\"\n            ></span>\n          )}\n        </button>\n      </section>\n\n      <hr />\n\n      <section className=\"bottom-header\">\n        <Link className=\"bottom-header__nav item-1\" to=\"users/add-a-user\">\n          Add a User\n        </Link>\n        {/* <Link className=\"bottom-header__nav item-2\" to=\"/delete-a-user\">\n          History\n        </Link> */}\n        <Link\n          className=\"bottom-header__nav item-3\"\n          to=\"/create-an-invoice/invoice-form\"\n        >\n          Create an Invoice\n        </Link>\n      </section>\n    </header>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { authUser: state.authUser };\n};\n\nexport default connect(mapStateToProps, { logOut })(Index);\n","import React from \"react\";\n\nimport \"./dashboard.css\";\n\nconst index = () => {\n  return (\n    <div className=\"dashboard-container\">\n      <img src=\"/images/bgDashboard.svg\" alt=\"billing svg\" />\n\n      <div className=\"list\">\n        <h1>Make Your Billing Experience Easier</h1>\n        <ul>\n          <li>Save all your invoices</li>\n          <li>Access any invoice at any time</li>\n          <li>Make your bussiness digital</li>\n          <li>Empress the customer</li>\n          <li>No worry for loss of data</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default index;\n","import React from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./products.css\";\nimport { fetchProducts } from \"../../../actions\";\n\nconst index = ({ fetchProducts }) => {\n  const clickHandler = (e) => {\n    e.preventDefault();\n\n    fetchProducts();\n  };\n  return (\n    <>\n      <section className=\"products-container\">\n        <Link className=\"link\" to=\"/products/add-a-product\">\n          Add A Product\n        </Link>\n        <button\n          onClick={(e) => clickHandler(e)}\n          style={{\n            background: \"transparent\",\n            border: \"none\",\n            fontSize: \"1.2rem\",\n            fontWeight: \"normal\",\n          }}\n        >\n          <Link className=\"link\" to=\"/products/view-all-product\">\n            View All Product\n          </Link>\n        </button>\n      </section>\n      <div className=\"outlet-container\">\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default connect(null, { fetchProducts })(index);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegEye } from \"react-icons/fa\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport {\n  fetchHistory,\n  fetchHistories,\n  fetchProducts,\n  deleteHistory,\n} from \"../../../actions\";\n\nconst Index = (props) => {\n  const showClickHandler = (id) => {\n    props.fetchHistory(id);\n    if (props.products.length === 0) props.fetchProducts();\n  };\n  const deleteClickHandler = (id) => {\n    props.deleteHistory(id);\n  };\n\n  // redering loading\n  const loading = () => {\n    props.fetchHistories();\n    return <div>Loading... </div>;\n  };\n\n  // fetch history if the history state is either empty array or not an array at all\n  if (\n    !(Object.prototype.toString.call(props.histories) === \"[object Array]\") ||\n    props.histories.length === 0\n  ) {\n    return loading();\n  }\n\n  const historyList = props.histories.map((history, index) => {\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{history.clientName}</td>\n        <td>{history.invoiceNo}</td>\n        <td>{history.date}</td>\n        <td>{history.userName}</td>\n        <td>\n          <Link\n            className=\"link edit\"\n            to={`/history/show/${history._id}`}\n            onClick={(e) => showClickHandler(history._id)}\n          >\n            {<FaRegEye />}\n          </Link>\n        </td>\n        <td>\n          <Link\n            className=\"link delete\"\n            to={`/history/all`}\n            onClick={(e) => deleteClickHandler(history._id)}\n          >\n            {<AiFillDelete />}\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <section className=\"invoice-container\">\n      <h1 className=\"title\">History</h1>\n\n      <table>\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Client Name</th>\n            <th>Invoice Number</th>\n            <th>Date</th>\n            <th>Issued By</th>\n            <th>View History</th>\n            <th>Delete History</th>\n          </tr>\n        </thead>\n\n        <tbody>{historyList}</tbody>\n      </table>\n    </section>\n  );\n};\n\nconst mapToStateToProps = (state) => {\n  //   console.log(state);\n  return { histories: state.history, products: state.products };\n};\nexport default connect(mapToStateToProps, {\n  fetchHistories,\n  fetchHistory,\n  fetchProducts,\n  deleteHistory,\n})(Index);\n","import React from \"react\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nimport \"./users.css\";\n\nconst index = () => {\n  return (\n    <>\n      <section className=\"users-container\">\n        <Link className=\"link\" to=\"/users/add-a-user\">\n          Add A User\n        </Link>\n        <Link className=\"link\" to=\"/users/view-all-users\">\n          View All User\n        </Link>\n      </section>\n      <div className=\"outlet-container\">\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default index;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { addClient, fetchProducts, refreshItem } from \"../../../actions\";\nimport \"./create-invoice.css\";\n\nconst InvoiceForm = (props) => {\n  const navigate = useNavigate();\n\n  // only refresh item if the create invoice link is directly clicked\n  useEffect(() => {\n    if (!props.client.isEditClient) props.refreshItem([]);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const { pristine, reset, submitting } = props;\n\n  // message info\n  const info = (message, bgColor) => {\n    return (\n      <h3\n        style={{\n          background: bgColor,\n          color: \"#fff\",\n          marginBottom: \"0.5rem\",\n          padding: \"0.5rem\",\n        }}\n      >\n        {message}\n      </h3>\n    );\n  };\n  const [message, setMessage] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // phone validation\n    if (\n      props.invoice.values.phone &&\n      isNaN(Number(props.invoice.values.phone))\n    ) {\n      setMessage(info(\"Phone must be a number\", \"#ca2525\"));\n    } else if (\n      props.invoice.values.phone &&\n      (props.invoice.values.phone.length < 9 ||\n        props.invoice.values.phone.length > 10)\n    ) {\n      setMessage(info(\"Phone must be a 9 or 10 digit number\", \"#ca2525\"));\n    } else {\n      props.addClient({\n        name: props.invoice.values.name,\n        phone: props.invoice.values.phone,\n        organization: props.invoice.values.organization,\n      });\n\n      // clearing all fields\n      reset();\n\n      // load all products if not fetched yet\n      if (!props.products) props.fetchProducts();\n\n      // redirecting to select products\n      navigate(\"/create-an-invoice/select-product\");\n    }\n  };\n\n  return (\n    <section className=\"form-container outlet-container\">\n      <h1>\n        {props.client.isEditClient ? \"Edit Client's Info\" : \"Add Client's Info\"}\n      </h1>\n\n      <form onSubmit={handleSubmit}>\n        {message}\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Client's Name:</label>\n          <Field name=\"name\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"phone\">Phone:</label>\n          <Field name=\"phone\" component=\"input\" type=\"text\" />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"organization\">Organization:</label>\n          <Field name=\"organization\" component=\"input\" type=\"text\" />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={!props.client.isEditClient ? pristine || submitting : false}\n          className=\"btn btn-add\"\n        >\n          Add\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Clear Values\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst maptStateToProps = (state) => {\n  return {\n    initialValues: {\n      name: state.client && state.client.isEditClient ? state.client.name : \"\", //provide the value for edit form\n      phone:\n        state.client && state.client.isEditClient ? state.client.phone : \"\", //provide the value for edit form\n      organization:\n        state.client && state.client.isEditClient\n          ? state.client.organization\n          : \"\", //provide the value for edit form\n    },\n    client: state.client,\n    invoice: state.form.invoice,\n  };\n};\n\nexport default connect(maptStateToProps, {\n  addClient,\n  fetchProducts,\n  refreshItem,\n})(\n  reduxForm({\n    form: \"invoice\", // a unique identifier for this form\n  })(InvoiceForm)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { reduxForm, Field } from \"redux-form\";\n\nimport { selectItem, editClient, deleteItem } from \"../../../actions\";\nimport \"./create-invoice.css\";\n\nconst ProductItemForm = (props) => {\n  const { pristine, reset, submitting } = props;\n\n  const selectedItems = props.selectedProducts.map((product, index) => {\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{product.name}</td>\n        <td>{product.quantity}</td>\n        {/* <td>\n          <Link className=\"link edit\" to=\"/edit:id\">\n            Edit\n          </Link>\n        </td> */}\n        <td>\n          <Link\n            className=\"link edit\"\n            to=\"/create-an-invoice/select-product\"\n            onClick={() => props.deleteItem(product)}\n          >\n            Delete\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  const info = (message, bgColor) => {\n    return (\n      <h3\n        style={{\n          background: bgColor,\n          color: \"#fff\",\n          marginBottom: \"0.5rem\",\n          padding: \"0.5rem\",\n        }}\n      >\n        {message}\n      </h3>\n    );\n  };\n\n  const [message, setMessage] = useState(\"\");\n\n  const options = props.products.map((product, index) => {\n    return (\n      <option key={index} name={product.name} value={product.name}>\n        {product.name}\n      </option>\n    );\n  });\n\n  const handleProductSubmit = (e) => {\n    e.preventDefault();\n\n    // quantity and name   validation\n    if (\n      props.items.values.quantity &&\n      isNaN(Number(props.items.values.quantity))\n    ) {\n      setMessage(info(\"Quantity must be a number\", \"#ca2525\"));\n    } else if (props.products.length === 0) {\n      setMessage(\n        <Link\n          className=\"link item-3\"\n          style={{ width: \"30%\" }}\n          to=\"/products/add-a-product\"\n        >\n          Add a product\n        </Link>\n      );\n    } else if (props.items.values.name === undefined) {\n      setMessage(info(\"Select a product first\", \"#ca2525\"));\n    } else {\n      props.selectItem({\n        name: props.items.values.name,\n        quantity: props.items.values.quantity,\n      });\n\n      // clearing the console\n\n      reset();\n\n      // showing success message\n      setMessage(\n        <div>\n          {info(`You have added ${props.items.values.name}`, \"#038f59\")}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <section className=\"form-container outlet-container\">\n      <h1>Select Product Items</h1>\n\n      <h3\n        style={{\n          background: \"#43bb4d\",\n          color: \"#ffff\",\n          width: \"30%\",\n          padding: \"1rem\",\n          marginBottom: \"1rem\",\n        }}\n      >{`Invoice for ${props.client.name}`}</h3>\n\n      <form onSubmit={handleProductSubmit}>\n        {message}\n        <div className=\"form-item\">\n          <label htmlFor=\"quantity\">Quantity:</label>\n          <Field name=\"quantity\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Product's Name:</label>\n          <div className=\"form-item multiple-choice\">\n            {/* <Field name=\"name\" component=\"select\">\n              {options}\n            </Field> */}\n\n            {/* autosuggestions */}\n            <Field\n              name=\"name\"\n              component=\"input\"\n              list=\"db-products\"\n              style={{ fontSize: \"0.8rem\", padding: \"0.5em 1rem\" }}\n            ></Field>\n\n            <datalist id=\"db-products\">{options}</datalist>\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={pristine || submitting}\n          className=\"btn btn-add\"\n        >\n          Add\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Clear Values\n        </button>\n\n        {/* Btn or link to edit client if necessary */}\n        <Link\n          className=\"btn btn-back\"\n          to=\"/create-an-invoice/invoice-form\"\n          onClick={() => props.editClient(props.client)}\n        >\n          Edit Client Info\n        </Link>\n\n        {/* Btn or link to see invoice */}\n        <Link className=\"btn btn-invoice\" to=\"/create-an-invoice/show-invoice\">\n          Show the invoice\n        </Link>\n      </form>\n\n      <div className=\"selected products\">\n        {props.selectedProducts.length !== 0 ? (\n          <table>\n            <thead>\n              <tr>\n                <th>SN</th>\n                <th>Product Name</th>\n                <th>Quantity</th>\n                {/* <th>Edit</th> */}\n                <th>Delete</th>\n              </tr>\n            </thead>\n\n            <tbody>{selectedItems}</tbody>\n          </table>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst maptStateToProps = (state) => {\n  return {\n    products: state.products,\n    items: state.form.productItems,\n    selectedProducts: state.selectedProducts,\n    client: state.client,\n  };\n};\n\nexport default connect(maptStateToProps, {\n  selectItem,\n  editClient,\n  deleteItem,\n})(\n  reduxForm({\n    form: \"productItems\", // a unique identifier for this form\n  })(ProductItemForm)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\n\nimport { addProduct } from \"../../../actions\";\n\nconst AddProductForm = (props) => {\n  const { pristine, reset, submitting } = props;\n\n  const info = (message, bgColor) => {\n    return (\n      <h3\n        style={{\n          background: bgColor,\n          color: \"#fff\",\n          marginBottom: \"0.5rem\",\n          padding: \"0.5rem\",\n        }}\n      >\n        {message}\n      </h3>\n    );\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true); //start loading animation\n    // validating rate\n    if (isNaN(Number(props.productInfo.values.rate))) {\n      setMessage(info(\"Rate must be a number\", \"#ca2525\"));\n    } else {\n      props\n        .addProduct({\n          name: props.productInfo.values.name,\n          rate: props.productInfo.values.rate,\n          description: props.productInfo.values.description,\n        })\n        .then(() => {\n          // clearing input field\n          reset();\n\n          setLoading(false); //stop loading animation\n          // showing success info\n          setMessage(\n            info(\n              ` You have added \"${props.productInfo.values.name}\"`,\n              \"#038f59\"\n            )\n          );\n          setError(\"\");\n        })\n        .catch((e) => {\n          setLoading(false); //stop loading animation\n          setError(\n            ` ${props.productInfo.values.name} product is already present `\n          );\n          setMessage(\"\");\n        });\n    }\n  };\n\n  return (\n    <section className=\"form-container\">\n      <h1>Add a product</h1>\n\n      <form onSubmit={handleSubmit}>\n        {message}\n\n        {error && <p className=\"error\">{error}</p>}\n\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Name:</label>\n          <Field name=\"name\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"rate\">Rate:</label>\n          <Field name=\"rate\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"description\">Description:</label>\n          <Field name=\"description\" component=\"input\" type=\"text\" />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={pristine || submitting}\n          className=\"btn btn-add\"\n        >\n          Add {loading && <span className=\"spinning-loader\"></span>}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Clear Values\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst maptStateToProps = (state) => {\n  return {\n    productInfo: state.form.productInfo,\n  };\n};\n\nexport default connect(maptStateToProps, { addProduct })(\n  reduxForm({\n    form: \"productInfo\", // a unique identifier for this form\n  })(AddProductForm)\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AiFillDelete, AiTwotoneEdit } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\n\nimport { deleteProduct, fetchProducts, fetchProduct } from \"../../../actions\";\n\nconst ViewAllProducts = (props) => {\n  const updateClickHandler = (id) => {\n    props.fetchProduct(id); //to get initial state for update form\n  };\n\n  const deleteClickHandler = (id) => {\n    props.deleteProduct(id);\n  };\n\n  // redering loading\n  const loading = () => {\n    props.fetchProducts();\n    return <div>Loading... </div>;\n  };\n\n  // fetch products if the products state is either empty array or not an array at all\n  if (\n    !(Object.prototype.toString.call(props.products) === \"[object Array]\") ||\n    props.products.length === 0\n  ) {\n    return loading();\n  }\n\n  const productsList = props.products.map((product, index) => {\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{product.name}</td>\n        <td>{product.rate}</td>\n        <td>{product.description}</td>\n        <td>\n          <Link\n            className=\"link edit\"\n            to={`/products/update/${product._id}`}\n            onClick={(e) => updateClickHandler(product._id)}\n          >\n            {<AiTwotoneEdit />}\n          </Link>\n        </td>\n        <td>\n          <Link\n            className=\"link delete\"\n            to={`/products/delete/${product._id}`}\n            onClick={(e) => deleteClickHandler(product._id)}\n          >\n            {<AiFillDelete />}\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <section className=\"all-products\">\n      <h1 className=\"title\">Products</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Product Name</th>\n            <th>Rate</th>\n            <th>Description</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n\n        <tbody>{productsList}</tbody>\n      </table>\n    </section>\n  );\n};\n\nconst mapToStateToProps = (state) => {\n  return { products: state.products };\n};\nexport default connect(mapToStateToProps, {\n  fetchProducts,\n  deleteProduct,\n  fetchProduct,\n})(ViewAllProducts);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchProducts, updateProduct } from \"../../../actions\";\n\nconst UpdateProductForm = (props) => {\n  const { pristine, reset, submitting } = props;\n\n  const { id } = useParams(); //current product id\n\n  const info = (message, bgColor) => {\n    return (\n      <h3\n        style={{\n          background: bgColor,\n          color: \"#fff\",\n          marginBottom: \"0.5rem\",\n          padding: \"0.5rem\",\n        }}\n      >\n        {message}\n      </h3>\n    );\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true); //start loading animation\n\n    // validating rate\n    if (isNaN(Number(props.productInfo.values.rate))) {\n      setMessage(info(\"Rate must be a number\", \"#ca2525\"));\n    } else {\n      props\n        .updateProduct(id, {\n          name: props.productInfo.values.name,\n          rate: props.productInfo.values.rate,\n          description: props.productInfo.values.description,\n        })\n        .then(() => {\n          setLoading(false); //stop loading animation\n\n          //to make sure all products are loaded in state for view all\n          props.fetchProducts();\n\n          // showing success info\n          setMessage(\n            info(\n              ` You have updated \"${props.productInfo.values.name}\"`,\n              \"#038f59\"\n            )\n          );\n          setError(\"\");\n        })\n        .catch((e) => {\n          setLoading(false); //stop loading animation\n          setError(\n            ` ${props.productInfo.values.name} product is already present `\n          );\n          setMessage(\"\");\n        });\n    }\n  };\n\n  return (\n    <section className=\"form-container\">\n      <h1>Update a product</h1>\n\n      <form onSubmit={handleSubmit}>\n        {message}\n        {error && <p className=\"error\">{error}</p>}\n\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Name:</label>\n          <Field name=\"name\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"rate\">Rate:</label>\n          <Field name=\"rate\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"description\">Description:</label>\n          <Field name=\"description\" component=\"input\" type=\"text\" />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-add\">\n          Update {loading && <span className=\"spinning-loader\"></span>}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Clear Values\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst maptStateToProps = (state, ownProps) => {\n  return {\n    initialValues: {\n      name: state.products.name,\n      rate: state.products.rate,\n      description: state.products.description,\n    },\n    productInfo: state.form.productInfo,\n  };\n};\n\nexport default connect(maptStateToProps, {\n  fetchProducts,\n  updateProduct,\n})(\n  reduxForm({\n    form: \"productInfo\", // a unique identifier for this form\n    enableReinitialize: true,\n  })(UpdateProductForm)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\n\nimport { addUser } from \"../../../actions\";\n\nconst AddUserForm = (props) => {\n  const { pristine, reset, submitting } = props;\n\n  const info = (message, bgColor) => {\n    return (\n      <h3\n        style={{\n          background: bgColor,\n          color: \"#fff\",\n          marginBottom: \"0.5rem\",\n          padding: \"0.5rem\",\n        }}\n      >\n        {message}\n      </h3>\n    );\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true); //start loading animation\n\n    // validating rate\n    if (isNaN(Number(props.userInfo.values.phone))) {\n      setMessage(info(\"Phone must be a number\", \"#ca2525\"));\n    } else if (\n      props.userInfo.values.phone.length < 9 ||\n      props.userInfo.values.phone.length > 10\n    ) {\n      setMessage(info(\"Phone must be a 9 or 10 digit number\", \"#ca2525\"));\n    } else {\n      props\n        .addUser({\n          name: props.userInfo.values.name,\n          phone: props.userInfo.values.phone,\n          email: props.userInfo.values.email,\n          password: props.userInfo.values.password,\n        })\n        .then(() => {\n          // clearing input field\n          reset();\n\n          setLoading(false); //stop loading animation\n\n          // showing success info\n          setMessage(\n            info(` You have added \"${props.userInfo.values.name}\"`, \"#038f59\")\n          );\n          setError(\"\");\n        })\n        .catch((e) => {\n          setLoading(false); //stop loading animation\n          setError(\"Email is already taken\");\n          setMessage(\"\");\n        });\n    }\n  };\n\n  return (\n    <section className=\"form-container\">\n      <h1>Add a User</h1>\n\n      <form onSubmit={handleSubmit}>\n        {message}\n        {error && <p className=\"error\">{error}</p>}\n\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Name:</label>\n          <Field name=\"name\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"phone\">Phone:</label>\n          <Field name=\"phone\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"email\">Email:</label>\n          <Field name=\"email\" component=\"input\" type=\"Email\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"password\">Password:</label>\n          <Field name=\"password\" component=\"input\" type=\"password\" required />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={pristine || submitting}\n          className=\"btn btn-add\"\n        >\n          Add {loading && <span className=\"spinning-loader\"></span>}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Clear Values\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst maptStateToProps = (state) => {\n  return {\n    userInfo: state.form.userInfo,\n  };\n};\n\nexport default connect(maptStateToProps, { addUser })(\n  reduxForm({\n    form: \"userInfo\", // a unique identifier for this form\n  })(AddUserForm)\n);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { AiFillDelete, AiTwotoneEdit } from \"react-icons/ai\";\n\nimport { fetchUsers, fetchUser, deleteUser } from \"../../../actions\";\n\nconst ViewAllUsers = (props) => {\n  const updateClickHandler = (id) => {\n    props.fetchUser(id); //to get initial state for update form\n  };\n\n  const deleteClickHandler = (id) => {\n    props.deleteUser(id);\n  };\n\n  useEffect(() => {\n    props.fetchUsers();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // redering loading\n  const loading = () => {\n    return <div>Loading... </div>;\n  };\n\n  // fetch users if the users state is either empty array or not an array at all\n  if (\n    !(Object.prototype.toString.call(props.users) === \"[object Array]\") ||\n    props.users.length === 0\n  ) {\n    return loading();\n  }\n\n  const usersList = props.users.map((user, index) => {\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{user.name}</td>\n        <td>{user.phone}</td>\n        <td>{user.email}</td>\n        <td>\n          <Link\n            className=\"link edit\"\n            to={`/users/update/${user._id}`}\n            onClick={(e) => updateClickHandler(user._id)}\n          >\n            {<AiTwotoneEdit />}\n          </Link>\n        </td>\n        <td>\n          <Link\n            className=\"link delete\"\n            to={`/users/delete/${user._id}`}\n            onClick={(e) => deleteClickHandler(user._id)}\n          >\n            {<AiFillDelete />}\n          </Link>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <section className=\"all-users\">\n      <h1 className=\"title\">Users</h1>\n      <table>\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>User Name</th>\n            <th>Phone</th>\n            <th>Email</th>\n            <th>Edit</th>\n            <th>Delete</th>\n          </tr>\n        </thead>\n\n        <tbody>{usersList}</tbody>\n      </table>\n    </section>\n  );\n};\n\nconst mapToStateToProps = (state) => {\n  return { users: state.users };\n};\nexport default connect(mapToStateToProps, {\n  fetchUsers,\n  fetchUser,\n  deleteUser,\n})(ViewAllUsers);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { useParams } from \"react-router-dom\";\n\nimport { fetchUsers, updateUser } from \"../../../actions\";\n\nconst UpdateUserForm = (props) => {\n  const { pristine, reset, submitting } = props;\n\n  const { id } = useParams(); //current product id\n\n  const info = (message, bgColor) => {\n    return (\n      <h3\n        style={{\n          background: bgColor,\n          color: \"#fff\",\n          marginBottom: \"0.5rem\",\n          padding: \"0.5rem\",\n        }}\n      >\n        {message}\n      </h3>\n    );\n  };\n\n  const [message, setMessage] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    setLoading(true); //start loading animation\n\n    // validating phone\n    if (isNaN(Number(props.userInfo.values.phone))) {\n      setMessage(info(\"Phone must be a number\", \"#ca2525\"));\n    } else if (\n      props.userInfo.values.phone.length < 9 ||\n      props.userInfo.values.phone.length > 10\n    ) {\n      setMessage(info(\"Phone must be a 9 or 10 digit number\", \"#ca2525\"));\n    } else {\n      props\n        .updateUser(id, {\n          name: props.userInfo.values.name,\n          phone: props.userInfo.values.phone,\n          email: props.userInfo.values.email,\n          password: props.userInfo.values.password,\n        })\n        .then(() => {\n          setLoading(false); //stop loading animation\n\n          // showing success info\n          setMessage(\n            info(` You have updated \"${props.userInfo.values.name}\"`, \"#038f59\")\n          );\n          setError(\"\");\n        })\n        .catch((e) => {\n          setLoading(false); //stop loading animation\n          setError(\"Email is already taken\");\n          setMessage(\"\");\n        });\n    }\n  };\n\n  return (\n    <section className=\"form-container\">\n      <h1>Update a User</h1>\n\n      <form onSubmit={handleSubmit}>\n        {message}\n        {error && <p className=\"error\">{error}</p>}\n\n        <div className=\"form-item\">\n          <label htmlFor=\"name\">Name:</label>\n          <Field name=\"name\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"phone\">Phone:</label>\n          <Field name=\"phone\" component=\"input\" type=\"text\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"email\">Email:</label>\n          <Field name=\"email\" component=\"input\" type=\"Email\" required />\n        </div>\n\n        <div className=\"form-item\">\n          <label htmlFor=\"password\">Password:</label>\n          <Field name=\"password\" component=\"input\" type=\"password\" />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-add\">\n          Update {loading && <span className=\"spinning-loader\"></span>}\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-clear\"\n          disabled={pristine || submitting}\n          onClick={reset}\n        >\n          Clear Values\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst maptStateToProps = (state) => {\n  return {\n    initialValues: {\n      name: state.users.name,\n      phone: state.users.phone,\n      email: state.users.email,\n      password: state.users.password,\n    },\n    userInfo: state.form.userInfo,\n  };\n};\n\nexport default connect(maptStateToProps, {\n  fetchUsers,\n  updateUser,\n})(\n  reduxForm({\n    form: \"userInfo\", // a unique identifier for this form\n    enableReinitialize: true,\n  })(UpdateUserForm)\n);\n","import React from \"react\";\n\nconst Item = ({ name, value }) => {\n  return (\n    <h4 className=\"items\">\n      {name} <span className=\"item-value\">{value}</span>\n    </h4>\n  );\n};\n\nexport default Item;\n","const InvoiceTable = (props) => {\n  let total_sum = 0;\n\n  const items = props.items.map((item, index) => {\n    const product = props.products.find(\n      (product) => product.name.toLowerCase() === item.name.toLowerCase()\n    );\n    const rate = parseInt(product.rate);\n    const amount = item.quantity * rate;\n    total_sum += amount;\n    return (\n      <tr key={index}>\n        <td>{index + 1}</td>\n        <td>{item.name}</td>\n        <td>{item.quantity}</td>\n        <td>{rate}</td>\n        <td>{amount}</td>\n      </tr>\n    );\n  });\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <th>SN</th>\n            <th>Partcular (s)</th>\n            <th>Qty</th>\n            <th>Rate (Rs.)</th>\n            <th>Amount (Rs.)</th>\n          </tr>\n        </thead>\n\n        <tbody>{items}</tbody>\n\n        <tfoot>\n          <tr className=\"total-sum__row\">\n            <td colSpan=\"5\" className=\"total-sum\">\n              Total Amount: Rs. {total_sum}\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    </>\n  );\n};\n\nexport default InvoiceTable;\n","import React, { useRef, useState } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport CompanyInfo from \"../../nav-left/CompanyInfo\";\nimport Item from \"./Item\";\nimport InvoiceTable from \"./InvoiceTable\";\n\nimport \"./create-invoice.css\";\nimport { createHistory, fetchHistories } from \"../../../actions\";\n\n// let clickedCounter = 0;\n\nconst ShowInvoice = (props) => {\n  /* eslint-disable no-unused-vars */ //not to throw defined but not used warning\n  const [date, setDate] = useState(new Date());\n  const componentRef = useRef();\n\n  const invoice_date = date.toLocaleDateString();\n  const invoice_time = date.toLocaleTimeString();\n  const invoice_no = date.getTime() % 16386317;\n\n  // Company const value\n  const PAN = 546749688;\n  const company_contact = 9844487985;\n\n  const newHistory = {\n    invoiceNo: invoice_no,\n    clientName: props.client.name,\n    clientPhone: props.client.phone,\n    clientOrganization: props.client.organization,\n    date: invoice_date,\n    time: invoice_time,\n    userName: props.name,\n    selectedProducts: props.data,\n  };\n\n  const afterPrintHandler = () => {\n    // if (clickedCounter < 1 || props.client.isEditClient)\n    props.createHistory(newHistory); //do not create history if print is clicked twice\n    // props.fetchHistories();\n    // clickedCounter++;\n    // console.log(props.history, clickedCounter);\n  };\n\n  return (\n    <>\n      <div className=\"invoice-container\" ref={componentRef}>\n        <section className=\"invoice-header\">\n          <div className=\"top-left__info\">\n            <div className=\"company-info__container\">\n              <CompanyInfo />\n              <h5>{company_contact}</h5>\n            </div>\n          </div>\n\n          <div className=\"invoice-info\">\n            <h2>Invoice</h2>\n          </div>\n\n          <div className=\"right-info\">\n            <Item name=\"Date:\" value={invoice_date} />\n            <Item name=\"Invoice No:\" value={invoice_no} />\n            <Item name=\"PAN:\" value={PAN} />\n          </div>\n\n          <div className=\"client-info\">\n            <Item name=\"Client's Name:\" value={props.client.name} />\n            <Item name=\"Contact:\" value={props.client.phone} />\n            <Item name=\"Organization:\" value={props.client.organization} />\n            <Item name=\"Time:\" value={invoice_time} />\n          </div>\n        </section>\n\n        <hr style={{ borderColor: \"#1b1b1b\" }} />\n\n        <section className=\"invoice-table\">\n          <InvoiceTable items={props.data} products={props.products} />\n\n          <hr style={{ borderColor: \"#1b1b1b\" }} />\n\n          <div className=\"remarks\">\n            <Item name=\"Signature:\" value={\"\"} />\n            <Item name=\"Issued By:\" value={props.name} />\n          </div>\n        </section>\n        <hr style={{ borderColor: \"#1b1b1b\" }} />\n      </div>\n\n      <div className=\"links\">\n        <button\n          className=\"btn-print\"\n          onClick={useReactToPrint({\n            content: () => componentRef.current,\n            onAfterPrint: () => afterPrintHandler(),\n          })}\n        >\n          Print\n        </button>\n        {/* Btn or link to add more item */}\n        <Link\n          className=\"btn btn-invoice\"\n          to=\"/create-an-invoice/select-product\"\n        >\n          Add more items\n        </Link>\n\n        {/* /* Btn or link to edit client if necessary */}\n        <Link className=\"btn btn-back\" to=\"/create-an-invoice/invoice-form\">\n          Edit Client Info\n        </Link>\n      </div>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    data: state.selectedProducts,\n    products: state.products,\n    client: state.client,\n    history: state.history,\n    name: localStorage.getItem(\"authToken\") ? state.authUser.user.name : \"\",\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createHistory,\n  fetchHistories,\n})(ShowInvoice);\n","import React, { useRef } from \"react\";\nimport { useReactToPrint } from \"react-to-print\";\nimport { connect } from \"react-redux\";\n\nimport CompanyInfo from \"../../nav-left/CompanyInfo\";\nimport Item from \"../create-invoice/Item\";\nimport InvoiceTable from \"../create-invoice/InvoiceTable\";\nimport { fetchHistories } from \"../../../actions\";\n\nconst PAN = 546749688;\nconst company_contact = 9844487985;\n\nconst ShowInvoice = ({ history, products, fetchHistories }) => {\n  const componentRef = useRef();\n\n  // redering loading\n  const loading = () => {\n    history.length === 0 ? <div>No Data Found... </div> : <div>Loading...</div>;\n  };\n\n  const historyTable =\n    Object.prototype.toString.call(history) === \"[object Array]\" ||\n    products.length === 0 ? (\n      loading()\n    ) : (\n      <InvoiceTable items={history.selectedProducts} products={products} />\n    );\n  return (\n    <>\n      <div className=\"invoice-container\" ref={componentRef}>\n        <section className=\"invoice-header\">\n          <div className=\"top-left__info\">\n            <div className=\"company-info__container\">\n              <CompanyInfo />\n              <h5>{company_contact}</h5>\n            </div>\n          </div>\n\n          <div className=\"invoice-info\">\n            <h2>Invoice</h2>\n          </div>\n\n          <div className=\"right-info\">\n            <Item name=\"Date:\" value={history.date} />\n            <Item name=\"Invoice No:\" value={history.invoiceNo} />\n            <Item name=\"PAN:\" value={PAN} />\n          </div>\n\n          <div className=\"client-info\">\n            <Item name=\"Client's Name:\" value={history.clientName} />\n            <Item name=\"Contact:\" value={history.clientPhone} />\n            <Item name=\"Organization:\" value={history.clientOrganization} />\n            <Item name=\"Time:\" value={history.time} />\n          </div>\n        </section>\n        <hr style={{ borderColor: \"#1b1b1b\" }} />\n        <section className=\"invoice-table\">\n          {historyTable}\n\n          <hr style={{ borderColor: \"#1b1b1b\" }} />\n\n          <div className=\"remarks\">\n            <Item name=\"Signature:\" value={\"\"} />\n            <Item name=\"Issued By:\" value={history.userName} />\n          </div>\n        </section>\n        <hr style={{ borderColor: \"#1b1b1b\" }} />\n      </div>\n\n      <div className=\"links\">\n        <button\n          className=\"btn-print\"\n          onClick={useReactToPrint({ content: () => componentRef.current })}\n        >\n          Print\n        </button>\n      </div>\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  // console.log(state.products);\n  return {\n    history: state.history,\n    products: state.products,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchHistories })(ShowInvoice);\n","import { Component } from \"react\";\nimport { Route, Routes, Outlet } from \"react-router-dom\";\n\nimport \"./main.css\";\n\nimport Dashboard from \"./dashboard\";\nimport Products from \"./products\";\nimport ViewAllHistory from \"./history\";\nimport Users from \"./users/\";\nimport InvoiceForm from \"./create-invoice/InvoiceForm\";\nimport ProductItemForm from \"./create-invoice/ProductItemForm\";\nimport AddProductForm from \"./products/AddProduct\";\nimport ViewAllProducts from \"./products/ViewAllProducts\";\nimport UpdateProduct from \"./products/UpdateProduct\";\n\nimport AddUserForm from \"./users/AddUserForm\";\nimport ViewAllUsers from \"./users/ViewAllUsers\";\nimport UpdateUser from \"./users/UpdateUser\";\n\nimport ShowInvoice from \"./create-invoice/ShowInvoice\";\nimport ShowHistory from \"./history/ShowHistory\";\n\nclass Index extends Component {\n  render() {\n    return (\n      <main>\n        <section className=\"main-body\">\n          <Routes>\n            <Route path=\"/dashboard/\" element={<Dashboard />}></Route>\n\n            <Route path=\"/products/\" element={<Products />}>\n              <Route path=\"view-all-product\" element={<ViewAllProducts />} />\n              <Route path=\"add-a-product\" element={<AddProductForm />} />\n              <Route path=\"delete/:id\" element={<ViewAllProducts />} />\n              <Route path=\"update/:id\" element={<UpdateProduct />} />\n            </Route>\n\n            <Route\n              path=\"/create-an-invoice\"\n              element={<Outlet name={\"outlet-container\"} />}\n            >\n              <Route path=\"invoice-form\" element={<InvoiceForm />} />\n              <Route path=\"select-product\" element={<ProductItemForm />} />\n              <Route path=\"show-invoice\" element={<ShowInvoice />} />\n            </Route>\n\n            <Route path=\"/history\" element={<Outlet />}>\n              <Route path=\"all\" element={<ViewAllHistory />} />\n              <Route path=\"show/:id\" element={<ShowHistory />} />\n            </Route>\n\n            <Route path=\"/users/\" element={<Users />}>\n              <Route path=\"view-all-users\" element={<ViewAllUsers />} />\n              <Route path=\"add-a-user\" element={<AddUserForm />} />\n              <Route path=\"delete/:id\" element={<ViewAllUsers />} />\n              <Route path=\"update/:id\" element={<UpdateUser />} />\n            </Route>\n          </Routes>\n        </section>\n      </main>\n    );\n  }\n}\n\nexport default Index;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { logIn } from \"../../actions\";\n\nimport \"./login.css\";\n\nconst Index = (props) => {\n  const navigate = useNavigate();\n\n  const { pristine, submitting } = props;\n\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    setLoading(true); //start loading animation\n    props\n      .logIn({\n        email: props.info.values.email,\n        password: props.info.values.password,\n      })\n      .then((response) => {\n        navigate(\"/dashboard\");\n        setLoading(false); //stop loading animation\n      })\n      .catch((e) => {\n        setLoading(false); //stop loading animation\n        setError(\"User Credentials do not match\");\n      });\n  };\n  return (\n    <section\n      className=\"login-container\"\n      style={{ background: 'url(\"/images/billing-software.png\")' }}\n    >\n      <div className=\"slogan\">\n        <h1>Enjoy The Billing Application</h1>\n        <h3>Make Your Bussiness Efficient</h3>\n      </div>\n      <form onSubmit={handleSubmit} className=\"form-container\">\n        {/* {message} */}\n        <div className=\"form-item\">\n          <label htmlFor=\"email\">Email:</label>\n          <Field name=\"email\" component=\"input\" type=\"email\" required />\n        </div>\n        <div className=\"form-item\">\n          <label htmlFor=\"password\">Password:</label>\n          <Field name=\"password\" component=\"input\" type=\"password\" required />\n        </div>\n\n        {error && <p className=\"error\"> {error}</p>}\n\n        <button\n          type=\"submit\"\n          disabled={pristine || submitting}\n          className=\"btn btn-login\"\n        >\n          Log In{\" \"}\n          {loading && (\n            <span\n              style={{ borderLeftColor: \"rgb(39, 154, 226)\" }}\n              className=\"spinning-loader\"\n            ></span>\n          )}\n        </button>\n      </form>\n    </section>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { info: state.form.logInInfo };\n};\n\nexport default connect(mapStateToProps, { logIn })(\n  reduxForm({\n    form: \"logInInfo\",\n  })(Index)\n);\n","import React, { useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\nimport LeftNavigation from \"./nav-left\";\nimport Header from \"./header\";\nimport Main from \"./main\";\nimport Login from \"./login\";\n// import Forbidden from \"./Forbidden\";\nimport { fetchAuthUser } from \"../actions\";\n\nconst App = ({ authUser, fetchAuthUser }) => {\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    const id = localStorage.getItem(\"authId\");\n    if (token) return fetchAuthUser(id);\n\n    return;\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderApp = !authUser.isAuth ? (\n    <Routes>\n      <Route path=\"/\" index element={<Login />}></Route>\n    </Routes>\n  ) : (\n    <div className=\"container\">\n      <LeftNavigation className=\"nav-left\" />\n      <Header className=\"header\" />\n      <Main className=\"main\"></Main>\n    </div>\n  );\n  return <BrowserRouter>{renderApp}</BrowserRouter>;\n};\n\nconst mapStateToProps = (state) => {\n  return { authUser: state.authUser };\n};\nexport default connect(mapStateToProps, { fetchAuthUser })(App);\n","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from \"redux-form\";\n\nimport { productsReducer } from \"./productsReducer\";\nimport { selectProductReducer } from \"./selectProductReducer\";\nimport { usersReducer } from \"./usersReducer\";\nimport { clientReducer } from \"./clientReducer\";\nimport { historyReducer } from \"./historyReducer\";\nimport { authReducer } from \"./authReducer\";\n\nexport default combineReducers({\n  form: formReducer,\n  products: productsReducer,\n  users: usersReducer,\n  selectedProducts: selectProductReducer,\n  client: clientReducer,\n  history: historyReducer,\n  authUser: authReducer,\n});\n","export const productsReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_PRODUCTS\":\n      return action.payload;\n\n    case \"FETCH_PRODUCT\":\n      return action.payload;\n\n    case \"DELETE_PRODUCT\":\n      return state.filter((item) => item._id !== action.payload._id); //this updates redux state which causes rerender\n\n    default:\n      return state;\n  }\n};\n","export const usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_USERS\":\n      return action.payload;\n\n    case \"FETCH_USER\":\n      return action.payload;\n\n    case \"DELETE_USER\":\n      return state.filter((item) => item._id !== action.payload._id); //this updates redux state which causes rerender\n\n    default:\n      return state;\n  }\n};\n","export const selectProductReducer = (state = [], action) => {\n  // console.log(action);\n  switch (action.type) {\n    case \"SELECT_ITEM\":\n      return [...state, action.payload];\n\n    case \"REFRESH_ITEM\":\n      return action.payload;\n\n    case \"DELETE_ITEM\":\n      return state.filter((item) => item.name !== action.payload.name);\n\n    default:\n      return state;\n  }\n};\n","export const clientReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"ADD_CLIENT\":\n      return action.payload;\n\n    case \"EDIT_CLIENT\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","export const historyReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_HISTORIES\":\n      return action.payload;\n\n    case \"FETCH_HISTORY\":\n      return action.payload;\n\n    case \"DELETE_HISTORY\":\n      return state.filter((item) => item._id !== action.payload._id); //this updates redux state which causes rerender\n    default:\n      return state;\n  }\n};\n","export const authReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"FETCH_AUTH_USER\":\n      return action.payload;\n\n    case \"LOG_IN\":\n      return action.payload;\n\n    case \"LOG_OUT\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport \"./index.css\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}